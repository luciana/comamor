{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","Navigation.jsx","Footer.jsx","logo.svg","aws-exports.js","Home.jsx","sentiment-analysis-graph.png","Result.jsx","index.js"],"names":["Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navigation","className","to","Footer","awsmobile","Amplify","configure","awsconfig","addPluggable","AmazonAIPredictionsProvider","Home","useState","textToInterpret","setTextToInterpret","SpeechToText","props","response","AudioRecorder","recording","setRecording","micStream","setMicStream","buffer","reset","console","log","addData","raw","concat","add","getData","audioBuffer","a","MicrophoneStream","getUserMedia","video","audio","stream","setStream","on","chunk","toRaw","format","finishRecording","stop","resultBuffer","onClick","bytes","Predictions","convert","transcription","source","language","fullText","catch","err","JSON","stringify","DateDisplay","Date","toLocaleString","AssistantNames","VitalCollection","htmlFor","id","placeholder","name","maxLength","size","src","logo","alt","setResponse","rows","cols","defaultValue","onChange","event","target","value","interpret","text","type","result","TextInterpretation","Result","graph","Buffer","from","ReactDOM","render","path","element","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3a6c5529.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Navigation() {\n  return (\n    <div className=\"navigation\">\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div className=\"container\">\n          <NavLink className=\"navbar-brand\" to=\"/\">\n            Diario do Papai com amor\n          </NavLink>\n          <div>\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/\">\n                  Home\n                  <span className=\"sr-only\">(current)</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/result\">\n                  Result\n                </NavLink>\n              </li>\n            \n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navigation;","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <footer className=\"py-5 bg-dark fixed-bottom\">\n        <div className=\"container\">\n          <p className=\"m-0 text-center text-white\">\n            Copyright &copy; Diario do papai 2022\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/logo.5b7ce74c.svg\";","/* eslint-disable */\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:fbe7eb38-5132-415f-97cb-45b25838622a\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_wRtFXFgdL\",\n    \"aws_user_pools_web_client_id\": \"7549sq518jnqrgqu30jh0r73d\",\n    \"oauth\": {},\n    \"aws_cognito_username_attributes\": [\n        \"EMAIL\"\n    ],\n    \"aws_cognito_social_providers\": [],\n    \"aws_cognito_signup_attributes\": [\n        \"EMAIL\"\n    ],\n    \"aws_cognito_mfa_configuration\": \"OFF\",\n    \"aws_cognito_mfa_types\": [\n        \"SMS\"\n    ],\n    \"aws_cognito_password_protection_settings\": {\n        \"passwordPolicyMinLength\": 8,\n        \"passwordPolicyCharacters\": []\n    },\n    \"aws_cognito_verification_mechanisms\": [\n        \"EMAIL\"\n    ],\n    \"predictions\": {\n        \"convert\": {\n            \"transcription\": {\n                \"region\": \"us-east-1\",\n                \"proxy\": false,\n                \"defaults\": {\n                    \"language\": \"en-US\"\n                }\n            }\n        },\n        \"interpret\": {\n            \"interpretText\": {\n                \"region\": \"us-east-1\",\n                \"proxy\": false,\n                \"defaults\": {\n                    \"type\": \"SENTIMENT\"\n                }\n            }\n        }\n    }\n};\n\n\nexport default awsmobile;\n","/* eslint-disable import/first */\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport Amplify from 'aws-amplify';\nimport Predictions, { AmazonAIPredictionsProvider } from '@aws-amplify/predictions';\nimport awsconfig from './aws-exports';\nimport getUserMedia from 'get-user-media-promise';\nimport MicrophoneStream from 'microphone-stream';\nimport { FaMicrophone, FaConfluence, FaUserAlt} from 'react-icons/fa';\n/*import { NavLink } from \"react-router-dom\";*/\nAmplify.configure(awsconfig);\nAmplify.addPluggable(new AmazonAIPredictionsProvider());\n\nfunction Home() {\n  const [textToInterpret, setTextToInterpret] = useState(\"\");\n\n  function SpeechToText(props) {\n    const [response] = useState(\"\");\n    function AudioRecorder(props) {      \n      const [recording, setRecording] = useState(false);\n      const [micStream, setMicStream] = useState();\n      const [audioBuffer] = useState(\n        (function() {\n          let buffer = [];\n          function add(raw) {\n            buffer = buffer.concat(...raw);\n            return buffer;\n          }\n          function newBuffer() {\n            console.log(\"resetting buffer\");\n            buffer = [];\n          }\n  \n          return {\n            reset: function() {\n              newBuffer();\n            },\n            addData: function(raw) {\n              return add(raw);\n            },\n            getData: function() {\n              return buffer;\n            }\n          };\n        })()\n      );\n\n      async function startRecording() {\n        console.log('start recording');\n        audioBuffer.reset();\n        const micStream = new MicrophoneStream();\n\n        getUserMedia({ video: false, audio: true })\n        .then(function(stream) {\n\n          micStream.setStream(stream);          \n          micStream.on('data', function(chunk) {\n            var raw = MicrophoneStream.toRaw(chunk)\n            if (raw == null) {\n              return;\n            }\n            audioBuffer.addData(raw);\n          });\n\n          micStream.on('format', function(format) {\n            console.log(\"Mic Stream on format\" , format);\n          });\n\n          setRecording(true);\n          setMicStream(micStream);\n          \n        });\n      }\n  \n      async function stopRecording() {\n        console.log('stop recording');\n        const { finishRecording } = props;\n  \n        micStream.stop();\n        setMicStream(null);\n        setRecording(false);\n  \n        const resultBuffer = audioBuffer.getData();\n  \n        if (typeof finishRecording === \"function\") {       \n          finishRecording(resultBuffer);\n        }\n      }\n  \n      return (\n        <div className=\"audioRecorder\">\n          <div>\n            {recording && <button onClick={stopRecording} className=\"button round white\" ><FaMicrophone className=\"famic recording\" /></button>}\n            {!recording && <button onClick={startRecording} className=\"button round white\"><FaMicrophone className='famic'/></button>}\n          </div>\n        </div>\n      );\n    }\n  \n    function convertFromBuffer(bytes) {\n      setTextToInterpret('Traduzindo audio...');\n  \n      Predictions.convert({\n        transcription: {\n          source: {\n            bytes\n          },\n          language: \"pt-BR\", // other options are \"en-GB\", \"fr-FR\", \"fr-CA\", \"es-US\"\n        },\n      }).then(({ transcription: { fullText } }) => setTextToInterpret(fullText))\n        .catch(err => setTextToInterpret(JSON.stringify(err, null, 2)))\n    }\n  \n    return (\n     \n      <div>         \n        <AudioRecorder finishRecording={convertFromBuffer} />          \n        <span>{response}</span>        \n      </div>\n    );\n  }\n\n  function TextInterpretation() {\n    const [response, setResponse] = useState(\"\")\n  \n  function interpretFromPredictions() {\n    Predictions.interpret({\n      text: {\n        source: {\n          text: textToInterpret,\n        },\n        type: \"ALL\"\n      }\n    }).then(result => setResponse(JSON.stringify(result, null, 2)))\n      .catch(err => setResponse(JSON.stringify(err, null, 2)))\n  }\n\n  function setText(event) {\n    console.log(\"set Text\", event.target.value);\n    setTextToInterpret(event.target.value);\n  }\n\n  return (   \n    <div>  \n     <div>    \n        <div className=\"inner white curve\"> \n          <div className=\"\">Como foi o dia hoje?</div>\n          <textarea rows=\"5\" cols=\"55\" defaultValue={textToInterpret} onChange={setText}></textarea>          \n          <div>\n            <button className=\"button\" onClick={interpretFromPredictions}>\n            <div>\n              <FaConfluence className=\"faconfluence\"/>\n              <span>Interpreta o humor do dia</span>\n            </div>\n          </button>     \n          </div>    \n        </div>        \n      </div>\n      <div>{response}</div> \n    </div>\n  );\n}\n\nfunction DateDisplay(){\n    return (\n      <div className=\"date\">\n        <span> Hoje: {new Date().toLocaleString()}</span>      \n      </div>\n    );\n}\n\nfunction AssistantNames(){\n  return (\n    <div className=\"outer\">\n    <div className=\"inner\">\n      <button className=\"button curve user\">\n            <div>\n              <FaUserAlt className=\"fauser\"/>\n              <span>Miriam Sobrenome</span>\n            </div>\n      </button> \n    </div>\n     <div className=\"inner\">\n      <button className=\"button curve user\">\n            <div>\n              <FaUserAlt className=\"fauser\"/>\n              <span>Samira Sobrenome</span>\n            </div>\n      </button> \n      </div> \n    </div>  \n  )\n}\n\nfunction VitalCollection(){\n  return (\n    <div className=\"outer\">\n    <div className=\"inner curve white highlight\">\n      <label htmlFor=\"name\" className=\"block\">Pressão Arterial</label>\n      <input id=\"pressao\" placeholder=\"120/80\" name=\"pressao\" maxLength=\"10\" size=\"6\"  /> mmHg\n    </div>\n    <div className=\"inner curve white highlight\">\n     <label htmlFor=\"name\" className=\"block\">Saturação</label>\n      <input id=\"saturacao\" placeholder=\"95\" name=\"saturacao\" maxLength=\"10\" size=\"6\"  /> SpO<span className=\"tiny\">2%</span>\n    </div>\n     <div className=\"inner curve white highlight\">\n      <label htmlFor=\"name\" className=\"block\">Temperatura</label>\n      <input id=\"temperatura\" placeholder=\"37\" name=\"temperatura\" maxLength=\"10\" size=\"6\"  /> &deg;C\n      </div> \n    </div>  \n  )\n}\n\n  return (\n    <div className=\"home\">\n      <div className=\"container\">\n        <div className=\"row align-items-center my-5\">\n          <div className=\"col-lg-5\">\n            <div className=\"App-header\">        \n                <img src={logo} className=\"App-logo\" alt=\"logo\" /> \n                <h1> Diario do Papai </h1>\n                 <p> <DateDisplay /></p>\n            </div>\n\n          </div>\n          <div className=\"col-lg-7\">\n             <p><AssistantNames /></p>\n             <p><VitalCollection /></p>\n             <div>\n              <div className=\"aligned\"> {TextInterpretation()} </div> \n              <div className=\"aligned\"> <SpeechToText />  </div>\n              </div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","export default __webpack_public_path__ + \"static/media/sentiment-analysis-graph.27319c3e.png\";","import React from \"react\";\nimport graph from './sentiment-analysis-graph.png';\n\nfunction Result() {\n  return (\n    <div className=\"result\">\n      <div className=\"container\">\n        <div className=\"row align-items-center my-5\">\n          <div className=\"col-lg-7\">          \n             <img src={graph} className=\"img-fluid rounded mb-4 mb-lg-0\" alt=\"sentiment analysis\" /> \n          </div>\n          <div className=\"col-lg-5\">\n            <h1 className=\"font-weight-light\">Results</h1>\n            <p>\n              Nosso pai tem demencia frontal. Uma doenca muito triste para ele e para a familia.\n              Por amor nos criamos esse sisterma para poder entender e adaptar as mudancas de humor do meu pai.\n              Esse sistema usa Inteligencia Articifical para relatar as mudancas de humor durante o tempo.\n            </p>\n           \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Result;","/* eslint-disable import/first */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport {Buffer} from 'buffer';\nBuffer.from('anything','base64');\n\nexport { default as Navigation } from \"./Navigation\";\nexport { default as Footer } from \"./Footer\";\nexport { default as Home } from \"./Home\";\nexport { default as Result } from \"./Result\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport {\n  Navigation,\n  Footer,\n  Home,\n  Result\n} from \"./\";\n\nReactDOM.render(\n  <Router>\n    <Navigation />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/result\" element={<Result />} />      \n    </Routes>\n    <Footer />\n  </Router>,\n   \n  document.getElementById(\"root\")\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}